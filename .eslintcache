[{"C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\index.js":"1","C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\App.js":"2","C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\components\\SimpleInput2.js":"4","C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\hooks\\UseInput.js":"5"},{"size":186,"mtime":1665482416939,"results":"6","hashOfConfig":"7"},{"size":258,"mtime":1665560267708,"results":"8","hashOfConfig":"7"},{"size":1694,"mtime":1665490297714,"results":"9","hashOfConfig":"7"},{"size":2977,"mtime":1665561989648,"results":"10","hashOfConfig":"7"},{"size":902,"mtime":1665562227072,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1gtvz2o",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\index.js",[],["24","25"],"C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\App.js",[],"C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\components\\SimpleInput.js",["26"],"import { useRef, useState, useEffect } from 'react'\r\n\r\nconst SimpleInput = (props) => {\r\n  const nameInputRef = useRef();\r\n  const [nameState, setNameState] = useState('default')\r\n  const [nameIsValid, setNameIsValid] = useState(false)\r\n  const [nameIsTouched, setNameIsTouched] = useState(false)\r\n\r\n  useEffect(()=>{\r\n      if (nameIsValid) console.log('name is Valid')\r\n  }, [nameIsValid])\r\n\r\n  const nameChangeHandler = (e) => {\r\n    setNameState(e.target.value)\r\n  }\r\n\r\n  const nameBlurHandler = (e) => {\r\n    setNameIsTouched(true);\r\n\r\n    if(nameState.trim() === '') {\r\n      setNameIsValid(false)\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault()\r\n    setNameIsTouched(true);\r\n\r\n    if(nameState.trim() === '') {\r\n      setNameIsValid(false)\r\n      return;\r\n    }\r\n    setNameIsValid(true);\r\n\r\n\r\n    // .... traitement exemple: requete POST\r\n\r\n    \r\n    setNameState('');\r\n  }\r\n\r\n\r\n  const nameInputIsinvalid = !nameIsValid &&  nameIsTouched;\r\n  const nameInputClasses = nameInputIsinvalid ? 'form-control invalid' : 'form-control';\r\n\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input \r\n        value={nameState}\r\n        onChange={nameChangeHandler} \r\n        onBlur={nameBlurHandler}\r\n        type='text' \r\n        id='name' />\r\n\r\n        {nameInputIsinvalid && (\r\n          <p className='error-text'>Name cannot be empty</p>\r\n        )}\r\n\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button >Submit</button>\r\n      </div>\r\n\r\n      {nameState}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleInput;\r\n","C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\components\\SimpleInput2.js",[],"C:\\Users\\33671\\OneDrive\\Bureau\\forms-starting-project\\src\\hooks\\UseInput.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":4,"column":9,"nodeType":"33","messageId":"34","endLine":4,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'nameInputRef' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]